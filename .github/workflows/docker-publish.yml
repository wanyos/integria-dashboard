name: Build and Push Docker Images to GitHub Container Registry

on:
  push:
    branches:
      - main # Cambia esto si usas otra rama principal

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Clonar el repositorio
      - name: Checkout repository
        uses: actions/checkout@v3

      # Paso 2: Configurar las variables de entorno desde el archivo .env
      - name: Load environment variables
        run: |
          echo "GITHUB_USERNAME=${{ secrets.GH_USERNAME }}" >> $GITHUB_ENV
          echo "PAT=${{ secrets.PAT }}" >> $GITHUB_ENV

      # Paso 3: Configurar Docker Compose
      - name: Install Docker Compose
        run: |
          mkdir -p ~/.docker/cli-plugins/
          curl -SL https://github.com/docker/compose/releases/download/v2.23.0/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose
          chmod +x ~/.docker/cli-plugins/docker-compose
          docker compose version

      # Paso 4: Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.PAT }}" | docker login ghcr.io -u "${{ secrets.GH_USERNAME }}" --password-stdin

      # Paso 5: Construir y etiquetar las imágenes
      - name: Build and tag Docker images
        run: |
          docker-compose -f docker-compose.yml build
          docker tag juanjo99/integriadb:v1 ghcr.io/${{ secrets.GH_USERNAME }}/integriadb:latest
          docker tag juanjo99/integria-server:v1 ghcr.io/${{ secrets.GH_USERNAME }}/integria-server:latest
          docker tag juanjo99/integria-frontend:v1 ghcr.io/${{ secrets.GH_USERNAME }}/integria-frontend:latest

      # Paso 6: Subir las imágenes al GitHub Container Registry
      - name: Push Docker images to GitHub Container Registry
        run: |
          docker push ghcr.io/${{ secrets.GH_USERNAME }}/integriadb:latest
          docker push ghcr.io/${{ secrets.GH_USERNAME }}/integria-server:latest
          docker push ghcr.io/${{ secrets.GH_USERNAME }}/integria-frontend:latest
